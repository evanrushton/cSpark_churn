yearLang %>%
filter(YEAR == "2017" & LANGUAGE != "Spanish") %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 16, other_level = "Other non-English")) %>%
filter(LANGUAGE != "Other non-English") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
#filter(total > 3200) %>%
arrange(desc(total)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labels()
#Non-Spanish Speaker bars
yearLang %>%
filter(YEAR == "2017" & LANGUAGE != "Spanish") %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 16, other_level = "Other non-English")) %>%
filter(LANGUAGE != "Other non-English") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
#filter(total > 3200) %>%
arrange(desc(total)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip() +
ylab("Top 15 Non-Spanish Speaking English Learners in CA 2017-2018")
#Non-Spanish Speaker bars
yearLang %>%
filter(YEAR == "2017" & LANGUAGE != "Spanish") %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 16, other_level = "Other non-English")) %>%
filter(LANGUAGE != "Other non-English") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
#filter(total > 3200) %>%
arrange(desc(total)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title="Top 15 Non-Spanish Speaking English Learners in CA 2017-2018", y="Number of Students")
#Non-Spanish Speaker bars
yearLang %>%
filter(YEAR == "2017" & LANGUAGE != "Spanish") %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 16, other_level = "Other non-English")) %>%
filter(LANGUAGE != "Other non-English") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
#filter(total > 3200) %>%
arrange(desc(total)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title="Top 15 Non-Spanish Languages in CA 2017-2018", y="Number of Students")
setwd("~/R-projects/enrollmentCA")
setwd("~/R-projects/enrollmentCA")
library(tidyverse)
theme_set(theme_light())
setwd("~/R-projects/enrollmentCA")
EL_enrollments <- fread("./Transformed_Data/CA/el.csv", header=TRUE)
library(tidyverse)
library(data.table) # To convert dataframes to datatables
theme_set(theme_light())
setwd("~/R-projects/enrollmentCA")
EL_enrollments <- fread("./Transformed_Data/CA/el.csv", header=TRUE)
yearLang <- EL_enrollments %>%
filter(!is.na(LANGUAGE)) %>%
select(YEAR, LANGUAGE, TOTAL)
lumpEL <- yearLang %>%
filter(!is.na(LANGUAGE)) %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 8, other_level = "Other non-English"))
yearLang %>%
count(LANGUAGE, sort = TRUE)
lumpEL%>%
count(LANGUAGE, sort = TRUE)
#bars TOP 7
lumpEL %>%
filter(YEAR == "2017") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
arrange(desc(total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip()+
labs(title="English Learners in CA 2017-2018", y="Number of Students")
#Non-Spanish Speaker bars
yearLang %>%
filter(YEAR == "2017" & LANGUAGE != "Spanish") %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 16, other_level = "Other non-English")) %>%
filter(LANGUAGE != "Other non-English") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
#filter(total > 3200) %>%
arrange(desc(total)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title="Top 15 Non-Spanish Languages in CA 2017-2018", y="Number of Students")
#Non-Spanish Speaker bars
yearLang %>%
filter(YEAR == "2017" & LANGUAGE != "Spanish") %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 16, other_level = "Other non-English")) %>%
filter(LANGUAGE != "Other non-English") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
#filter(total > 3200) %>%
arrange(desc(total)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title="     Top 15 Non-Spanish Languages in CA 2017-2018", y="Number of Students")
#Non-Spanish Speaker bars
yearLang %>%
filter(YEAR == "2017" & LANGUAGE != "Spanish") %>%
mutate(LANGUAGE = fct_lump(LANGUAGE, n = 16, other_level = "Other non-English")) %>%
filter(LANGUAGE != "Other non-English") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
#filter(total > 3200) %>%
arrange(desc(total)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip() +
labs(title="               Top 15 Non-Spanish Languages in CA 2017-2018", y="Number of Students")
#bars TOP 7
lumpEL %>%
filter(YEAR == "2017") %>%
group_by(LANGUAGE) %>%
summarize(total = sum(TOTAL)) %>%
mutate(LANGUAGE = fct_reorder(LANGUAGE, total)) %>%
arrange(desc(total)) %>%
ggplot(aes(LANGUAGE, total, fill = LANGUAGE, na.rm=T)) +
geom_col(show.legend = FALSE) +
coord_flip()+
labs(title="               English Learners in CA 2017-2018", y="Number of Students")
#line graph
DTel %>%
group_by_at(vars(LANGUAGE, YEAR)) %>%
summarize(total = sum(TOTAL)) %>%
filter(total > 3200) %>%
ggplot(aes(YEAR, total)) +
geom_line(aes(colour=LANGUAGE, group=LANGUAGE)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
expand_limits(y=0) +
ylab("# of speakers per year")
#line graph
yearLang %>%
group_by_at(vars(LANGUAGE, YEAR)) %>%
summarize(total = sum(TOTAL)) %>%
filter(total > 3200) %>%
ggplot(aes(YEAR, total)) +
geom_line(aes(colour=LANGUAGE, group=LANGUAGE)) +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
expand_limits(y=0) +
ylab("# of speakers per year")
#log-scale lines
yearLang %>%
group_by_at(vars(LANGUAGE, YEAR)) %>%
summarize(total = sum(TOTAL)) %>%
filter(total > 10000) %>%
ggplot(aes(YEAR, total)) +
geom_line(aes(colour=LANGUAGE, group=LANGUAGE)) +
scale_y_log10() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
expand_limits(y=0) +
ylab("# of speakers per year (log-scale)")
cdsLang <- EL_enrollments %>%
filter(!is.na(LANGUAGE)) %>%
select(CDS_CODE, YEAR, LANGUAGE, TOTAL)
cdsLang %>%
filter(YEAR == "2011") %>%
count(distinct(CDS_CODE))
cdsLang %>%
filter(YEAR == "2011") %>%
count(CDS_CODE)
cdsLang %>%
filter(YEAR == "2011") %>%
count(CDS_CODE, sort = TRUE)
cdsLang %>%
filter(YEAR == "2011") %>%
count(as.character(CDS_CODE), sort = TRUE)
cdsLang %>%
filter(YEAR == "2011") %>%
count(distinct(as.character(CDS_CODE)))
count(distinct(cdsLang$CDS_CODE))
count(distinct(as.character(cdsLang$CDS_CODE)))
count(unique(as.character(cdsLang$CDS_CODE)))
length(unique(cdsLang$CDS_CODE))
cdsLang %>%
filter(YEAR == "2011") %>%
length(unique(CDS_CODE))
cdsLang %>%
filter(YEAR == "2011") %>%
length(unique(cdsLang$CDS_CODE))
length(unique(cdsLang$CDS_CODE[which(cdsLang$YEAR == "2011")]))
length(unique(cdsLang$CDS_CODE[which(cdsLang$YEAR == "2010")]))
length(unique(cdsLang$CDS_CODE[which(cdsLang$YEAR == "2009")]))
length(unique(cdsLang$CDS_CODE[which(cdsLang$YEAR == "2008")]))
yearLang %>%
count(YEAR) %>%
ggplot(aes(YEAR, n)) +
geom_point() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
expand_limits(y=0) +
ylab("# of observations per year")
setwd("~/R-projects/codeSpark_churn")
knitr::opts_chunk$set(echo = TRUE)
dataASO <- read_csv("./Data/Churn_5-week_windows_Past_3_months.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(corrplot)
library(randomForest)
library(glmnet)
library(caret)
install.packages(caret)
install.packages("caret")
library(caret)
install.packages(c("antiword", "BH", "bit", "boot", "chron", "cluster", "coda", "codetools", "colorspace", "covr", "cubature", "curl", "DiceKriging", "digest", "dimRed", "dplyr", "DT", "eRm", "evaluate", "expm", "foreign", "gamlss", "gamlss.data", "gamlss.dist", "gcookbook", "ggplot2", "gridExtra", "htmlwidgets", "ipred", "kohonen", "koRpus", "later", "lattice", "lazyeval", "lintr", "listviewer", "magick", "manipulate", "maps", "maptools", "MASS", "Matrix", "mgcv", "microbenchmark", "mime", "mmpf", "mvtnorm", "NLP", "np", "nycflights13", "openssl", "osmdata", "pander", "pmml", "ps", "psych", "raster", "Rcpp", "RCurl", "relsurv", "reshape", "reshape2", "rjags", "RJSONIO", "rlang", "rpart", "rpart.plot", "rstudioapi", "selectr", "shiny", "shinydashboard", "shinyWidgets", "sn", "sp", "survey", "survival", "swirl", "tables", "testthat", "tidyr", "tidyselect", "webshot", "xts", "yaml"))
knitr::opts_chunk$set(echo = TRUE)
dataASO <- read_csv("./Data/Churn_5-week_windows_Past_3_months.csv")
setwd("~/R-projects/codeSpark_churn")
library(tidyverse)
library(corrplot)
library(randomForest)
library(glmnet)
library(caret)
# ATTENTION: The data "./Data/ChurnSeg_Past_6_months_.csv" won't work because it is aggregated aross subscription duration. Need to constrina the data during aggregation step in JQL
setwd("~/R-projects/codeSpark_churn")
data1718 <- read_csv("./Data/ChurnSeg_Past_6_months_.csv") # 53203
dataASO <- read_csv("./Data/Churn_5-week_windows_Past_3_months.csv")
head(dataASO)
min(dataASO$qa_subscription_date)
max(dataASO$qa_subscription_date)
dim(dataASO)
df <- read_csv("./Data/Churn_5-week_windows_Past_3_months.csv")
library(tidyverse)
library(corrplot)
library(randomForest)
library(glmnet)
library(caret)
df <- read_csv("./Data/Churn_5-week_windows_Past_3_months.csv")
# ===== Visualize Vars =====
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent)
hist(df$time_spent, main="Minutes Played")
hist(df$time_spent[which(df$time_spent < 1000)], main="Minutes Played (Under 1000 mins)")
# ===== Visualize Vars =====
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent, main="Minutes Played")
hist(df$time_spent[which(df$time_spent < 1000)], main="Minutes Played (Under 1000 mins)")
hist(df$time_spent[which(df$time_spent < 100)], main="Minutes Played (Under 100 mins)")
# ===== Visualize Vars =====
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent, main="Minutes Played")
hist(df$time_spent[which(df$time_spent < 1000)], main="Minutes Played (Under 10000 mins)")
hist(df$time_spent[which(df$time_spent < 100)], main="Minutes Played (Under 1000 mins)")
# ===== Visualize Vars =====
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent, main="Minutes Played")
hist(df$time_spent[which(df$time_spent < 10000)], main="Minutes Played (Under 10000 mins)")
hist(df$time_spent[which(df$time_spent < 1000)], main="Minutes Played (Under 1000 mins)")
hist(df$time_spent, main="Minutes Played") + abline(a=mean(df$time_spent), b=0)
hist(df$time_spent, main="Minutes Played") + abline(a=300, b=0)
mean(df$time_spent)
hist(df$time_spent, main="Minutes Played") + abline(a=25842, b=0)
median(df$time_spent)
hist(df$time_spent, main="Minutes Played") + abline(a=6278, b=0)
hist(df$time_spent[which(df$time_spent < 10000)], main="Minutes Played (Under 10000 mins)") + abline(a=6278, b=0)
hist(df$time_spent[which(df$time_spent < 1000)], main="Minutes Played (Under 1000 mins)") + abline(a=6278, b=0)
hist(df$qa_days_subscribed, main="Subscription Duration (days)")
hist(df$qa_days_subscribed[which(df$qa_days_subscribed < 40)], main="Subscription Duration (Under 40 days)")
table(df$qa_days_subscribed)
table(round(df$qa_days_subscribed))
df %>% select(round(df$qa_days_subscribed) == 92)
df %>% select(df$qa_days_subscribed == 92)
df %>% filter(df$qa_days_subscribed == 92)
df %>% filter(round(df$qa_days_subscribed == 92))
df %>% filter(round(df$qa_days_subscribed) == 92)
df %>% filter(round(df$qa_days_subscribed) == 92) %>% View()
hist(as.Date(df$qa_subscription_date), main="Subscription Date")
countdf$qa_days_subscribed[which(df$qa_days_subscribed < 40)], main="Subscription Duration (Under 40 days)")
count(as.Date(df$qa_subscription_date))
table(as.Date(df$qa_subscription_date))
prop.table(round(df$qa_days_subscribed))
days <- table(round(df$qa_days_subscribed))
prop.table(days)
prop.table(days)*100
round(prop.table(days)*100, 2)
round(prop.table(days)*100, 2)
dim(df)
df %>%
filter(qa_days_subscribed <= 39)
dim(df)
df %>%
filter(qa_days_subscribed < 40)
dim(df)
type(df)
class(Df)
clss(df)
class(df)
df <- read_csv("./Data/trackingWindow_Churn_Prediction-10days.csv")
class(df)
table(round(df$qa_days_subscribed))
length(unique(df$qa_parse_account_id))
unique(df$qa_parse_account_id)
View(df$qa_parse_account_id)
unique(df$_parse_id)
unique(df$_parse_id)
distinct(df$_parse_id)
hist(df$time_spent, main="Seconds Played")
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent, main="Seconds Played")
hist(df$time_spent[which(df$time_spent < 10000)], main="Minutes Played (Under 10000 mins)")
hist(df$time_spent[which(df$time_spent < 1000)], main="Minutes Played (Under 1000 mins)")
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main="Seconds Played")
hist(df$time_spent[which(df$time_spent < 10000)] / 60, main="Minutes Played (Under 10000 mins)")
hist(df$time_spent[which(df$time_spent < 1000)] / 60, main="Minutes Played (Under 1000 mins)")
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main="Minutes Played (Under 240 mins)")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main="Minutes Played (Under 120 mins)")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main="Minutes Played (Under 20 mins)")
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main="Minutes Played")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main="Minutes Played (Under 240 mins)")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main="Minutes Played (Under 120 mins)")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main="Minutes Played (Under 60 mins)")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main="Minutes Played (Under 40 mins)")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main="Minutes Played (Under 20 mins)")
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main="Minutes Played (N = 15322)", xlab="")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main="Minutes Played (Under 240 mins)", xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main="Minutes Played (Under 120 mins)", xlab="")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main="Minutes Played (Under 60 mins)", xlab="")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main="Minutes Played (Under 40 mins)", xlab="")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main="Minutes Played (Under 20 mins)", xlab="")
length(df$time_spent[which(df$time_spent < 14400)])
length(df$time_spent[which(df$time_spent < 7200)])
length(df$time_spent[which(df$time_spent < 3600)])
length(df$time_spent[which(df$time_spent < 2400)])
length(df$time_spent[which(df$time_spent < 1200)])
#Histograms and tables to check distributions of vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main="Minutes Played (N= 15322)", xlab="")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main="Under 240 mins (N= 10687)", xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main="Under 120 mins (N= 8192)", xlab="")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main="Under 60 mins (N= 5705))", xlab="")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main="Under 40 mins (N= 4408))", xlab="")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main="Under 20 mins (N= 2411))", xlab="")
hist(df$qa_days_subscribed, main="Subscription Duration (days)")
table(round(df$qa_days_subscribed))
xtabs(df, ~ qa_days_subscribed + canceled)
xtabs(~ qa_days_subscribed + canceled, data=df)
xtabs(~ canceled + qa_days_subscribed, data=df)
xtabs(~ canceled + round(qa_days_subscribed), data=df)
df33 <- read_csv("./Data/trackingWindow_Churn_Prediction-33days.csv")
xtabs(~ canceled + round(qa_days_subscribed), data=df33)
table(round(df$qa_days_subscribed))
xtabs(~ canceled + round(qa_days_subscribed), data=df)
df65 <- read_csv("./Data/trackingWindow_Churn_Prediction-65days.csv")
xtabs(~ canceled + round(qa_days_subscribed), data=df65)
colnames(df)
tables(df$qa_product_id)
table(df$qa_product_id)
table(df10$qa_product_id)
rm(df)
df10 <- read_csv("./Data/trackingWindow_Churn_Prediction-10days.csv")
table(df10$qa_product_id)
table(df33$qa_product_id)
table(df65$qa_product_id)
xtabs(~ canceled + round(qa_days_subscribed), data=df10)
xtabs(~ canceled + round(qa_days_subscribed), data=df33)
xtabs(~ canceled + round(qa_days_subscribed), data=df65)
sim(df10)
hist(df10$mission_complete_events , main="Mission Complete (N= 15322)", xlab="")
#Histograms to check distributions of numerical vars
par(mfrow = c(3, 2))
hist(df10$mission_complete_events , main="Mission Complete (N= 15322)", xlab="")
length(df10$mission_complete_events[which(df10$mission_complete_events < 2000)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 1000)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 500)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 400)])
hist(df10$mission_complete_events[which(df10$mission_complete_events < 500)] , main="Under 500 complete (N= 15320)", xlab="")
length(df10$mission_complete_events[which(df10$mission_complete_events < 400)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 200)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 100)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 50)])
hist(df10$mission_complete_events[which(df10$mission_complete_events < 50)] , main="Under 50 complete (N= 14132)", xlab="")
length(df10$mission_complete_events[which(df10$mission_complete_events < 20)])
hist(df10$mission_complete_events[which(df10$mission_complete_events < 20)] , main="Under 20 complete (N= 11313)", xlab="")
length(df10$mission_complete_events[which(df10$mission_complete_events < 2)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 5)])
length(df10$mission_complete_events[which(df10$mission_complete_events < 10)])
hist(df10$mission_complete_events[which(df10$mission_complete_events < 10)] , main="Under 10 complete (N= 8846)", xlab="")
length(df10$mission_complete_events[which(df10$mission_complete_events < 1)])
hist(df10$mission_complete_events[which(df10$mission_complete_events < 5)] , main="Under 5 complete (N= 7140)", xlab="")
hist(df$qa_days_subscribed, main="Subscription Duration (days)")
# ===== Visualize Vars =====
df <- df33
#Histograms to check distributions of numerical vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main="Minutes Played (N= 15322)", xlab="")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main="Under 240 mins (N= 10687)", xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main="Under 120 mins (N= 8192)", xlab="")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main="Under 60 mins (N= 5705))", xlab="")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main="Under 40 mins (N= 4408))", xlab="")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main="Under 20 mins (N= 2411))", xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main=paste("Under 120 mins (N= ",length(df$time_spent[which(df$time_spent < 7200)]),")", sep="") xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main=paste("Under 120 mins (N= ",length(df$time_spent[which(df$time_spent < 7200)]),")", sep=""), xlab="")
df65 <- read_csv("./Data/trackingWindow_Churn_Prediction-65days.csv")
levels(df65$qa_product_id)
table(df65$qa_product_id)
#Histograms to check distributions of numerical vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main="Minutes Played (N= 15322)", xlab="")
hist(df$time_spent / 60, main=paste("Minutes Played (N= ",length(df$time_spent),")", sep=""), xlab="")
# ===== Visualize Vars =====
df <- df65
hist(df$time_spent / 60, main=paste("Minutes Played (N= ",length(df$time_spent),")", sep=""), xlab="")
#Histograms to check distributions of numerical vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main=paste("Minutes Played (N= ",length(df$time_spent),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main=paste("Under 240 mins (N= ",length(df$time_spent[which(df$time_spent < 14400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main=paste("Under 120 mins (N= ",length(df$time_spent[which(df$time_spent < 7200)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main=paste("Under 60 mins (N= ",length(df$time_spent[which(df$time_spent < 3600)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main=paste("Under 40 mins (N= ",length(df$time_spent[which(df$time_spent < 2400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main=paste("Under 20 mins (N= ",length(df$time_spent[which(df$time_spent < 1200)]),")", sep=""), xlab="")
hist(df$mission_complete_events , main=paste("Mission Complete (N= ",length(df$mission_complete_events),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 500)] , main=paste("Under 500 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 500)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df10$mission_complete_events < 50)] , main=paste("Under 50 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 50)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 50)] , main=paste("Under 50 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 50)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 20)] , main=paste("Under 20 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 20)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 10)] , main=paste("Under 10 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 10)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 5)] , main=paste("Under 5 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 5)]),")", sep=""), xlab="")
xtabs(~ canceled + round(qa_days_subscribed), data=df65)
df33 <- read_csv("./Data/trackingWindow_Churn_Prediction-33days.csv")
xtabs(~ canceled + round(qa_days_subscribed), data=df33)
df10 <- read_csv("./Data/trackingWindow_Churn_Prediction-10days.csv")
xtabs(~ canceled + round(qa_days_subscribed), data=df10)
# ===== Visualize Vars =====
df <- df10
#Histograms to check distributions of numerical vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main=paste("Minutes Played (N= ",length(df$time_spent),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main=paste("Under 240 mins (N= ",length(df$time_spent[which(df$time_spent < 14400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main=paste("Under 120 mins (N= ",length(df$time_spent[which(df$time_spent < 7200)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main=paste("Under 60 mins (N= ",length(df$time_spent[which(df$time_spent < 3600)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main=paste("Under 40 mins (N= ",length(df$time_spent[which(df$time_spent < 2400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main=paste("Under 20 mins (N= ",length(df$time_spent[which(df$time_spent < 1200)]),")", sep=""), xlab="")
hist(df$mission_complete_events , main=paste("Mission Complete (N= ",length(df$mission_complete_events),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 500)] , main=paste("Under 500 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 500)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 50)] , main=paste("Under 50 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 50)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 20)] , main=paste("Under 20 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 20)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 10)] , main=paste("Under 10 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 10)]),")", sep=""), xlab="")
hist(df$mission_complete_events[which(df$mission_complete_events < 5)] , main=paste("Under 5 complete (N= ",length(df$mission_complete_events[which(df$mission_complete_events < 5)]),")", sep=""), xlab="")
# ===== Visualize Vars =====
df <- df33
#Histograms to check distributions of numerical vars
par(mfrow = c(3, 2))
hist(df$time_spent / 60, main=paste("Minutes Played (N= ",length(df$time_spent),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main=paste("Under 240 mins (N= ",length(df$time_spent[which(df$time_spent < 14400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main=paste("Under 120 mins (N= ",length(df$time_spent[which(df$time_spent < 7200)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main=paste("Under 60 mins (N= ",length(df$time_spent[which(df$time_spent < 3600)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main=paste("Under 40 mins (N= ",length(df$time_spent[which(df$time_spent < 2400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main=paste("Under 20 mins (N= ",length(df$time_spent[which(df$time_spent < 1200)]),")", sep=""), xlab="")
# ===== Visualize Vars =====
df <- df10
hist(df$time_spent / 60, main=paste("Minutes Played (N= ",length(df$time_spent),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 14400)] / 60, main=paste("Under 240 mins (N= ",length(df$time_spent[which(df$time_spent < 14400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 7200)] / 60, main=paste("Under 120 mins (N= ",length(df$time_spent[which(df$time_spent < 7200)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 3600)] / 60, main=paste("Under 60 mins (N= ",length(df$time_spent[which(df$time_spent < 3600)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 2400)] / 60, main=paste("Under 40 mins (N= ",length(df$time_spent[which(df$time_spent < 2400)]),")", sep=""), xlab="")
hist(df$time_spent[which(df$time_spent < 1200)] / 60, main=paste("Under 20 mins (N= ",length(df$time_spent[which(df$time_spent < 1200)]),")", sep=""), xlab="")
sum(df10$time_spent)
sum(df35$time_spent)
sum(df33$time_spent)
sum(df65$time_spent)
xtabs(~ median(time_spent) + as.Date(qa_subscription_date), data=df10)
xtabs(~ canceled + round(qa_days_subscribed), data=df10)
xtabs(~ time_spent + as.Date(qa_subscription_date), data=df10)
df <- df10
xtabs(~ canceled + round(qa_days_subscribed), data=df10)
xtabs(~ canceled + round(qa_days_subscribed), data=df33)
xtabs(~ canceled + round(qa_days_subscribed), data=df65)
df %>%
ggplot(aes(x=as.Date(qa_subscription_date), y=time_spent)) +
geom_point()
table(as.Date(df$qa_subscription_date))
hist(as.Date(df$qa_subscription_date))
table(as.Date(df33$qa_subscription_date))
df10sub <- read_csv("./Data/trackingWindow_Churn_Prediction-10daysub.csv")
xtabs(~ canceled + round(qa_days_subscribed), data=df10sub)
xtabs(~ canceled + round(qa_days_subscribed), data=df10)
table(as.Date(df10sub$qa_subscription_date))
table(as.Date(df10$qa_subscription_date))
df33sub <- read_csv("./Data/trackingWindow_Churn_Prediction-33daysub.csv")
xtabs(~ canceled + round(qa_days_subscribed), data=df33sub)
xtabs(~ canceled + round(qa_days_subscribed), data=df33)
